openapi: 3.0.0
paths:
  /admin/reports:
    get:
      operationId: AdminController_getAllReports
      parameters:
        - name: isDeleted
          required: true
          in: query
          schema:
            type: boolean
        - name: category
          required: false
          in: query
          schema:
            enum:
              - trash
              - forest
              - beetle
              - permits
            type: string
      responses:
        '200':
          description: All reports have been successfully found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FullReportDto'
      tags:
        - admin
      security:
        - bearer: []
    post:
      operationId: AdminController_updateReport
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateReportDto'
      responses:
        '200':
          description: Report has been successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullReportDto'
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags:
        - admin
      security:
        - bearer: []
  /admin/reports/{refId}:
    get:
      operationId: AdminController_getReportById
      parameters:
        - name: refId
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: Single full report has been successfully found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullReportDto'
        '404':
          description: Report not found
      tags:
        - admin
      security:
        - bearer: []
  /admin/dumps/{refId}:
    get:
      operationId: AdminController_getDumpById
      parameters:
        - name: refId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Single full dump has been successfully found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullDumpDto'
        '404':
          description: Dump not found
      tags:
        - admin
      security:
        - bearer: []
  /admin/reports/transfer:
    post:
      operationId: AdminController_transferReport
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferReportDto'
      responses:
        '200':
          description: Report has been successfully transferred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferReportDto'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullReportDto'
      tags:
        - admin
      security:
        - bearer: []
  /admin/dumps:
    get:
      operationId: AdminController_getAllDumps
      parameters: []
      responses:
        '200':
          description: All dumps have been successfully found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FullDumpDto'
      tags:
        - admin
      security:
        - bearer: []
    post:
      operationId: AdminController_updateDump
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDumpDto'
      responses:
        '200':
          description: Dump has been successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullDumpDto'
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags:
        - admin
      security:
        - bearer: []
    put:
      operationId: AdminController_createDump
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDumpDto'
      responses:
        '200':
          description: Dump has been successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullDumpDto'
      tags:
        - admin
      security:
        - bearer: []
  /dumps:
    get:
      operationId: DumpController_getAllVisibleDumps
      parameters: []
      responses:
        '200':
          description: All visible dumps have been successfully found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DumpDto'
      tags:
        - dumps
  /reports:
    post:
      operationId: ReportController_createNewReport
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateReportDto'
      responses:
        '201':
          description: New Report has been successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicReportDto'
      tags:
        - reports
    get:
      operationId: ReportController_getAllPublicReports
      parameters:
        - name: category
          required: false
          in: query
          schema:
            enum:
              - trash
              - forest
              - beetle
              - permits
            type: string
      responses:
        '200':
          description: All visible reports have been successfully found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PublicReportDto'
      tags:
        - reports
  /reports/statistics:
    get:
      operationId: ReportController_getReportStatistics
      parameters:
        - name: category
          required: false
          in: query
          schema:
            enum:
              - trash
              - forest
              - beetle
              - permits
            type: string
      responses:
        '200':
          description: Report statistics have been successfully fetched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportStatisticsDto'
      tags:
        - reports
  /reports/{refId}:
    get:
      operationId: ReportController_getReportById
      parameters:
        - name: refId
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: Report has been successfully found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicReportDto'
        '404':
          description: Report not found
      tags:
        - reports
  /reports/feedback-report:
    post:
      operationId: ReportController_sendFeedbackReport
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFeedbackReportDto'
      responses:
        '200':
          description: New feedback report has been successfully found
          content:
            application/json:
              schema:
                type: string
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags:
        - reports
  /auth/login:
    post:
      operationId: AuthController_login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestDto'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogInDto'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogInDto'
      tags:
        - auth
info:
  title: Tvarkau Lietuva API
  description: API skirtas Tvarkau Lietuva projektui
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: Bearer
      bearerFormat: JWT
      description: 'Please enter token in following format: Bearer <JWT>'
      type: http
      in: Header
  schemas:
    HistoryEditsDto:
      type: object
      properties:
        field:
          type: string
        change:
          type: string
      required:
        - field
        - change
    HistoryDataDto:
      type: object
      properties:
        user:
          type: string
        date:
          format: date-time
          type: string
        edits:
          type: array
          items:
            $ref: '#/components/schemas/HistoryEditsDto'
      required:
        - user
        - date
        - edits
    StatusRecordsDto:
      type: object
      properties:
        status:
          type: string
        date:
          format: date-time
          type: string
      required:
        - status
        - date
    FullReportDto:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        category:
          enum:
            - trash
            - forest
            - beetle
            - permits
          type: string
        refId:
          type: string
        longitude:
          type: number
          format: double
        latitude:
          type: number
          format: double
        email:
          type: string
        inspection:
          type: string
          nullable: true
        inspectionId:
          type: string
          nullable: true
        isVisible:
          type: boolean
        isDeleted:
          type: boolean
        isTransferred:
          type: boolean
          nullable: true
        comment:
          type: string
        status:
          type: string
        reportDate:
          format: date-time
          type: string
        officerImageUrls:
          type: array
          items:
            type: string
        imageUrls:
          type: array
          items:
            type: string
        historyData:
          type: array
          items:
            $ref: '#/components/schemas/HistoryDataDto'
        statusRecords:
          type: array
          items:
            $ref: '#/components/schemas/StatusRecordsDto'
        emailFeedbackStage:
          type: number
          format: double
      required:
        - _id
        - name
        - category
        - refId
        - longitude
        - latitude
        - email
        - isVisible
        - isDeleted
        - comment
        - status
        - reportDate
        - officerImageUrls
        - imageUrls
        - historyData
        - statusRecords
        - emailFeedbackStage
    FullDumpDto:
      type: object
      properties:
        refId:
          type: string
        name:
          type: string
        longitude:
          type: number
          format: double
        latitude:
          type: number
          format: double
        isVisible:
          type: boolean
        address:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        workingHours:
          type: string
        moreInformation:
          type: string
      required:
        - refId
        - name
        - longitude
        - latitude
        - isVisible
        - workingHours
        - moreInformation
    UpdateReportDto:
      type: object
      properties:
        refId:
          type: string
        name:
          type: string
        longitude:
          type: number
        latitude:
          type: number
        isVisible:
          type: boolean
        isDeleted:
          type: boolean
        comment:
          type: string
        status:
          type: string
        officerImageUrls:
          type: array
          items:
            type: string
        imageUrls:
          type: array
          items:
            type: string
        images:
          type: array
          items:
            type: string
            format: binary
      required:
        - refId
        - name
        - longitude
        - latitude
        - isVisible
        - isDeleted
        - comment
        - status
        - officerImageUrls
        - imageUrls
        - images
    TransferReportDto:
      type: object
      properties:
        refId:
          type: string
        name:
          type: string
        longitude:
          type: number
          format: double
        latitude:
          type: number
          format: double
        status:
          type: string
        reportDate:
          format: date-time
          type: string
        email:
          type: string
      required:
        - refId
        - name
        - longitude
        - latitude
        - status
        - reportDate
        - email
    UpdateDumpDto:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        longitude:
          type: number
        latitude:
          type: number
        isVisible:
          type: boolean
        address:
          type: string
        phone:
          type: string
        workingHours:
          type: string
        moreInformation:
          type: string
      required:
        - _id
        - name
        - longitude
        - latitude
        - isVisible
        - address
        - phone
        - workingHours
        - moreInformation
    CreateDumpDto:
      type: object
      properties:
        name:
          type: string
        reportLong:
          type: number
        reportLat:
          type: number
        address:
          type: string
        phone:
          type: string
        workingHours:
          type: string
        moreInformation:
          type: string
      required:
        - name
        - reportLong
        - reportLat
    DumpDto:
      type: object
      properties:
        name:
          type: string
        reportLong:
          type: number
          format: double
        reportLat:
          type: number
          format: double
        address:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        workingHours:
          type: string
        moreInformation:
          type: string
      required:
        - name
        - reportLong
        - reportLat
        - address
        - phone
        - workingHours
        - moreInformation
    CreateReportDto:
      type: object
      properties:
        images:
          type: array
          items:
            type: string
            format: binary
        name:
          type: string
        longitude:
          type: number
        latitude:
          type: number
        category:
          type: string
          enum:
            - trash
            - forest
            - beetle
            - permits
        email:
          type: string
        automaticEmailsEnabled:
          type: boolean
      required:
        - images
        - name
        - longitude
        - latitude
        - category
        - email
        - automaticEmailsEnabled
    PublicReportDto:
      type: object
      properties:
        name:
          type: string
        category:
          enum:
            - trash
            - forest
            - beetle
            - permits
          type: string
        refId:
          type: string
        longitude:
          type: number
          format: double
        latitude:
          type: number
          format: double
        comment:
          type: string
        status:
          type: string
        reportDate:
          format: date-time
          type: string
        officerImageUrls:
          type: array
          items:
            type: string
        imageUrls:
          type: array
          items:
            type: string
        statusRecords:
          type: array
          items:
            $ref: '#/components/schemas/StatusRecordsDto'
      required:
        - name
        - category
        - refId
        - longitude
        - latitude
        - comment
        - status
        - reportDate
        - officerImageUrls
        - imageUrls
        - statusRecords
    ReportStatisticsDto:
      type: object
      properties:
        totalSentReports:
          type: integer
        totalInInvestigationReports:
          type: integer
        totalInvestigatedReports:
          type: integer
        totalFalseReports:
          type: integer
      required:
        - totalSentReports
        - totalInInvestigationReports
        - totalInvestigatedReports
        - totalFalseReports
    CreateFeedbackReportDto:
      type: object
      properties:
        description:
          type: string
        email:
          type: string
      required:
        - description
        - email
    LoginRequestDto:
      type: object
      properties:
        accessKey:
          type: string
      required:
        - accessKey
    LogInDto:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        accessKey:
          type: string
      required:
        - name
        - email
        - accessKey